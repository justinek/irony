geom_smooth(method=lm) +
#facet_grid(person ~ dimension) +
theme_bw() +
scale_shape_manual(values=c(1, 16), name="utterance type", labels=c("figurative", "literal")) +
xlab("Model") +
ylab("Human")
ggplot(comp.all, aes(x=model, y=prob)) +
#geom_errorbar(aes(ymin=prob-se, ymax=prob+se), color="gray") +
geom_point(aes(color=polarity, shape=literal)) +
geom_smooth(method=lm) +
#facet_grid(person ~ dimension) +
theme_bw() +
scale_shape_manual(values=c(1, 16), name="utterance type", labels=c("figurative", "literal")) +
xlab("Model") +
ylab("Human")
ggplot(comp.all, aes(x=model, y=prob)) +
#geom_errorbar(aes(ymin=prob-se, ymax=prob+se), color="gray") +
geom_point(aes(color=polarity, shape=literal)) +
geom_smooth(method=lm, color="gray") +
#facet_grid(person ~ dimension) +
theme_bw() +
scale_shape_manual(values=c(1, 16), name="utterance type", labels=c("figurative", "literal")) +
xlab("Model") +
ylab("Human")
with(comp.all, cor.test(model, prob))
interp <- read.csv("../data/interpretation/long_askIrony.csv")
numSubjects <- length(unique(interp$workerID))
interp$stateRating <- factor(interp$stateRating, labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$imageCategory <- factor(interp$imageCategory, levels=c("terrible", "bad", "ok", "good", "amazing"),
labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$utterance <- factor(interp$utterance, levels=c("terrible", "bad", "ok", "good", "amazing"),
labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$imageID.utterance <- paste(interp$imageID, interp$utterance, sep=",")
# irony
irony.summary <- summarySE(interp, measurevar="ironyRating", groupvars=c("imageID", "imageCategory", "utterance"))
irony.summary$imageValence <- ifelse(irony.summary$imageID == 4, "neutral",
ifelse(irony.summary$imageID == 7 | irony.summary$imageID == 8 | irony.summary$imageID == 9,
"neg", "pos"))
irony.summary$utteranceValence <- ifelse(irony.summary$utterance == "neutral", "neutral",
ifelse(irony.summary$utterance == "amazing" | irony.summary$utterance == "good", "pos",
"neg"))
irony.summary$consistent <- ifelse(irony.summary$imageValence == irony.summary$utteranceValence, 1, 0)
t.test(subset(irony.summary, consistent==1)$ironyRating, subset(irony.summary, consistent==0)$ironyRating)
summary(lm(data=irony.summary, ironyRating ~ consistent))
summary(lm(data=irony.summary, ironyRating ~ utteranceValence * imageValence))
ggplot(irony.summary, aes(x=utterance, y=ironyRating)) +
geom_bar(stat="identity", color="black", fill="grey", position=position_dodge()) +
geom_errorbar(aes(ymin=ironyRating-se, ymax=ironyRating+se), position=position_dodge(0.9), width=0.2) +
facet_wrap(~imageID, ncol=3) +
theme_bw() +
ylab("Irony rating")
setwd("~/Dropbox/Work/Grad_school/Research/Irony/analyses")
interp <- read.csv("../data/interpretation/long_askIrony.csv")
numSubjects <- length(unique(interp$workerID))
interp$stateRating <- factor(interp$stateRating, labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$imageCategory <- factor(interp$imageCategory, levels=c("terrible", "bad", "ok", "good", "amazing"),
labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$utterance <- factor(interp$utterance, levels=c("terrible", "bad", "ok", "good", "amazing"),
labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$imageID.utterance <- paste(interp$imageID, interp$utterance, sep=",")
# irony
irony.summary <- summarySE(interp, measurevar="ironyRating", groupvars=c("imageID", "imageCategory", "utterance"))
irony.summary$imageValence <- ifelse(irony.summary$imageID == 4, "neutral",
ifelse(irony.summary$imageID == 7 | irony.summary$imageID == 8 | irony.summary$imageID == 9,
"neg", "pos"))
irony.summary$utteranceValence <- ifelse(irony.summary$utterance == "neutral", "neutral",
ifelse(irony.summary$utterance == "amazing" | irony.summary$utterance == "good", "pos",
"neg"))
irony.summary$consistent <- ifelse(irony.summary$imageValence == irony.summary$utteranceValence, 1, 0)
t.test(subset(irony.summary, consistent==1)$ironyRating, subset(irony.summary, consistent==0)$ironyRating)
summary(lm(data=irony.summary, ironyRating ~ consistent))
summary(lm(data=irony.summary, ironyRating ~ utteranceValence * imageValence))
ggplot(irony.summary, aes(x=utterance, y=ironyRating)) +
geom_bar(stat="identity", color="black", fill="grey", position=position_dodge()) +
geom_errorbar(aes(ymin=ironyRating-se, ymax=ironyRating+se), position=position_dodge(0.9), width=0.2) +
facet_wrap(~imageID, ncol=3) +
theme_bw() +
ylab("Irony rating")
interp.states.raw <- with(interp, table(imageID.utterance, stateRating)) + 1
interp.states <- as.data.frame(prop.table(interp.states.raw, margin = 1))
interp.states <- cbind(interp.states,ldply(strsplit(as.character(interp.states$imageID.utterance),",")))
colnames(interp.states)[2] <- "state"
colnames(interp.states)[4] <- "imageID"
colnames(interp.states)[5] <- "utterance"
interp.states$utterance <- factor(interp.states$utterance, levels=c("terrible", "bad", "neutral", "good", "amazing"))
interp.states$state <- factor(interp.states$state, levels=c("terrible", "bad", "neutral", "good", "amazing"))
#quartz()
ggplot(interp.states, aes(x=state, y=Freq)) +
geom_bar(stat="identity", fill="gray", color="black") +
ylab("probability") +
facet_grid(imageID~utterance) +
theme_bw()
ggplot(comp.state, aes(x=probability, y=prob, color=literal)) +
#geom_text(aes(label=state)) +
geom_point() +
#facet_grid(imageID ~ utterance) +
geom_smooth(method=lm, color="gray") +
#ylim(c(0, 1)) +
#xlim(c(0, 1)) +
theme_bw() +
xlab("Model") +
ylab("Humans")
head(interp.states)
interp.states$imageID.reordered <- factor(interp.states$imageID, levels=c(3, 2, 1, 6, 5, 4, 8, 7, 9),
labels=c("w1", "w2", "w3", "w4", "w5", "w6", "w7", "w8", "w9"))
ggplot(interp.states, aes(x=state, y=Freq)) +
geom_bar(stat="identity", fill="gray", color="black") +
ylab("probability") +
facet_grid(imageID.reordered~utterance) +
theme_bw()
interp.states$priorCat <- ifelse(interp.states$imageID <=3, "Positive", ifelse(interp.states$imageID >=7, "Negative", "Neutral"))
ggplot(interp.states, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID)) +
ylab("probability") +
facet_grid(imageID.reordered~utterance) +
theme_bw()
ggplot(interp.states, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(imageID.reordered~utterance) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1))
interp.states$priorCat <- factor(interp.states$priorCat, levels=c("Positive", "Neutral", "negative"))
ggplot(interp.states, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(imageID.reordered~utterance) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1))
interp.states$priorCat <- ifelse(interp.states$imageID <=3, "Positive", ifelse(interp.states$imageID >=7, "Negative", "Neutral"))
interp.states$priorCat <- factor(interp.states$priorCat, levels=c("Positive", "Neutral", "Negative"))
ggplot(interp.states, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(imageID.reordered~utterance) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1))
element
element
ggplot(interp.states, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(imageID.reordered~utterance) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(interp.states, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(imageID.reordered~utterance) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1)) +
theme(axis.text.x = element_text(angle = -90, hjust = 1))
head(interp.states)
head(interp.states)
interp.states.subset <- subset(interp.states, (imageID.reordered=="w1" | imageID.reordered=="w6" | imageID.reordered=="w8")
& utterance=="terrible")
head(interp.states.subset)
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(imageID.reordered~utterance) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(.~imageID.reordered) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(.~imageID.reordered) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1))
interp.states.subset$imageID.reordered <- factor(interp.states.subset$imageID.reordered, levels=c("w8", "w6", "w1"))
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(.~imageID.reordered) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1))
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(.~imageID.reordered) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type")
interp.states.subset <- subset(interp.states, (imageID.reordered=="w2" | imageID.reordered=="w6" | imageID.reordered=="w8")
& utterance=="terrible")
interp.states.subset$imageID.reordered <- factor(interp.states.subset$imageID.reordered, levels=c("w8", "w6", "w2"))
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(.~imageID.reordered) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type")
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(.~imageID.reordered) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
theme(axis.text.x = element_text(size=14))
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(.~imageID.reordered) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
theme(axis.text.x = element_text(angle= 90, hjust=1))
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(.~imageID.reordered) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), guide=FALSE) +
theme(axis.text.x = element_text(angle= 90, hjust=1))
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(.~imageID.reordered) +
theme_bw() +
#theme(axis.text.x = element_text(angle= 90, hjust=1)) +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), guide=FALSE)
affect.posterior <- predict(comps, interp)
setwd("~/Dropbox/Work/Grad_school/Research/Irony/analyses")
priors <- read.csv("../data/priors/long.csv")
numSubjects <- length(unique(priors$workerID))
priors$stateRating <- factor(priors$stateRating, labels=c("terrible", "bad", "neutral", "good", "amazing"))
priors.states.raw <- with(priors, table(imageID, stateRating)) + 1 #laplace smoothing
priors.states <- as.data.frame(prop.table(priors.states.raw, margin = 1))
colnames(priors.states)[3] <- "prior"
# plot distribution over states
ggplot(priors.states, aes(x=stateRating, y=prior)) +
geom_bar(stat="identity", fill="gray", color="black") +
ylab("probability") +
facet_wrap(~imageID, ncol=3) +
theme_bw()
priors.states$imageID.reordered <- factor(priors.states$imageID, levels=c(3, 2, 1, 6, 5, 4, 8, 7, 9),
labels=c("Weather context 1", "Weather context 2", "Weather context 3",
"Weather context 4", "Weather context 5", "Weather context 6",
"Weather context 7", "Weather context 8", "Weather context 9"))
priors.states$imageCategory <- ifelse(as.numeric(priors.states$imageID) <= 3, "Positive",
ifelse(as.numeric(priors.states$imageID) >= 7,
"Negative", "Neutral"))
priors.states$imageCategory <- factor(priors.states$imageCategory, levels=c("Positive", "Neutral", "Negative"))
ggplot(priors.states, aes(x=stateRating, y=prior)) +
geom_point(size=3, aes(color=imageCategory))+
geom_line(aes(group=imageID, color=imageCategory)) +
ylab("Proportion of participants") +
xlab("Weather state") +
facet_wrap(~imageID.reordered, ncol=3) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1))
ggplot(priors.states, aes(x=stateRating, y=prior, color=imageID)) +
geom_point(size=3) +
geom_line(aes(group=imageID), color="gray") +
ylab("Proportion of subjects") +
xlab("State") +
#facet_wrap(~imageID, ncol=3) +
theme_bw()
# affect ratings
comps <- princomp(data=priors, ~ sad + disgusted + angry + neutral + content + happy + excited, cor=FALSE, scores=TRUE)
#comps <- princomp(data=priors, ~ sad + disgusted + angry + content + happy + excited, cor=FALSE, scores=TRUE)
summary(comps)
biplot(comps)
ggbiplot(comps, pc.biplot= TRUE, obs.scale = 1, var.scale = 1,
circle = FALSE, labels.size=5, alpha=0.2, varname.size=3.5, varname.adjust=1) +
theme_bw() +
scale_y_reverse() +
xlab("PC1: Valence (69.1% var.)") +
ylab("PC2: Arousal (13.9% var.)") +
theme(axis.text.x = element_blank(), axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor=element_blank(), panel.grid.major=element_blank())
loadings(comps)
scores <- summary(comps)$scores
scores.z <- scale(scores)
scores.probit <- pnorm(scores.z)
priors.pca.probit <- cbind(priors, scores.probit)
priors.pca.probit.long <-  melt(data=priors.pca.probit, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "imageID", "imageCategory",  "stateRating"),
measure.vars=c("Comp.1", "Comp.2"))
priors.pca.probit.long$value.corrected <- ifelse(priors.pca.probit.long$variable=="Comp.2",
1- priors.pca.probit.long$value,
priors.pca.probit.long$value)
priors.pca.probit.summary <- summarySE(priors.pca.probit.long, measurevar="value.corrected",
groupvars=c("variable", "stateRating"))
ggplot(priors.pca.probit.summary, aes(x=stateRating, y=value.corrected, color=variable)) +
geom_point() +
geom_line(aes(group=variable)) +
#geom_point(size=2) +
#geom_line(aes(group=variable)) +
geom_errorbar(aes(ymin=value.corrected-ci, ymax=value.corrected+ci), width=0.05) +
#facet_wrap(~ stateRating, ncol=3) +
theme_bw() +
xlab("Weather state rating") +
ylab("Probability") +
scale_color_discrete(name="Affect dimension", labels=c("Positive valence", "High arousal"))
####################################
# Interpretation data
####################################
interp <- read.csv("../data/interpretation/long_askIrony.csv")
numSubjects <- length(unique(interp$workerID))
interp$stateRating <- factor(interp$stateRating, labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$imageCategory <- factor(interp$imageCategory, levels=c("terrible", "bad", "ok", "good", "amazing"),
labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$utterance <- factor(interp$utterance, levels=c("terrible", "bad", "ok", "good", "amazing"),
labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$imageID.utterance <- paste(interp$imageID, interp$utterance, sep=",")
# irony
irony.summary <- summarySE(interp, measurevar="ironyRating", groupvars=c("imageID", "imageCategory", "utterance"))
irony.summary$imageValence <- ifelse(irony.summary$imageID == 4, "neutral",
ifelse(irony.summary$imageID == 7 | irony.summary$imageID == 8 | irony.summary$imageID == 9,
"neg", "pos"))
irony.summary$utteranceValence <- ifelse(irony.summary$utterance == "neutral", "neutral",
ifelse(irony.summary$utterance == "amazing" | irony.summary$utterance == "good", "pos",
"neg"))
irony.summary$consistent <- ifelse(irony.summary$imageValence == irony.summary$utteranceValence, 1, 0)
t.test(subset(irony.summary, consistent==1)$ironyRating, subset(irony.summary, consistent==0)$ironyRating)
summary(lm(data=irony.summary, ironyRating ~ consistent))
summary(lm(data=irony.summary, ironyRating ~ utteranceValence * imageValence))
ggplot(irony.summary, aes(x=utterance, y=ironyRating)) +
geom_bar(stat="identity", color="black", fill="grey", position=position_dodge()) +
geom_errorbar(aes(ymin=ironyRating-se, ymax=ironyRating+se), position=position_dodge(0.9), width=0.2) +
facet_wrap(~imageID, ncol=3) +
theme_bw() +
ylab("Irony rating")
# Mixed model
interp$imageValence <- ifelse(interp$imageID == 4, "neutral",
ifelse(interp$imageID == 7 | interp$imageID == 8 | interp$imageID == 9,
"neg", "pos"))
interp$utteranceValence <- ifelse(interp$utterance == "neutral", "neutral",
ifelse(interp$utterance == "amazing" | interp$utterance == "good", "pos",
"neg"))
interp$consistent <- ifelse(interp$imageValence == interp$utteranceValence, 1, 0)
lm.irony <- lmer(data=interp, ironyRating ~ imageValence * utteranceValence + (1| workerID), REML=FALSE)
summary(lm.irony)
# state
interp.states.raw <- with(interp, table(imageID.utterance, stateRating)) + 1
interp.states <- as.data.frame(prop.table(interp.states.raw, margin = 1))
interp.states <- cbind(interp.states,ldply(strsplit(as.character(interp.states$imageID.utterance),",")))
colnames(interp.states)[2] <- "state"
colnames(interp.states)[4] <- "imageID"
colnames(interp.states)[5] <- "utterance"
interp.states$utterance <- factor(interp.states$utterance, levels=c("terrible", "bad", "neutral", "good", "amazing"))
interp.states$state <- factor(interp.states$state, levels=c("terrible", "bad", "neutral", "good", "amazing"))
#quartz()
interp.states$imageID.reordered <- factor(interp.states$imageID, levels=c(3, 2, 1, 6, 5, 4, 8, 7, 9),
labels=c("w1", "w2", "w3", "w4", "w5", "w6", "w7", "w8", "w9"))
interp.states$priorCat <- ifelse(interp.states$imageID <=3, "Positive", ifelse(interp.states$imageID >=7, "Negative", "Neutral"))
interp.states$priorCat <- factor(interp.states$priorCat, levels=c("Positive", "Neutral", "Negative"))
ggplot(interp.states, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(imageID.reordered~utterance) +
theme_bw() +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), name="Weather type") +
ylim(c(0, 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Create plot of just w2, w6, w8 for illustration purposes
interp.states.subset <- subset(interp.states, (imageID.reordered=="w2" | imageID.reordered=="w6" | imageID.reordered=="w8")
& utterance=="terrible")
interp.states.subset$imageID.reordered <- factor(interp.states.subset$imageID.reordered, levels=c("w8", "w6", "w2"))
ggplot(interp.states.subset, aes(x=state, y=Freq)) +
#geom_bar(stat="identity", fill="gray", color="black") +
geom_point(aes(color=priorCat)) +
geom_line(aes(group=imageID, color=priorCat)) +
ylab("probability") +
facet_grid(.~imageID.reordered) +
theme_bw() +
#theme(axis.text.x = element_text(angle= 90, hjust=1)) +
scale_color_manual(values=c("#fc4e2a", "#99d8c9", "#2b8cbe"), guide=FALSE)
# Compare irony and state distribution
colnames(interp.states)[3] <- "prob"
interp.states.wide <- reshape(data=interp.states, direction="wide",
v.names="prob", idvar=c("imageID", "utterance"), timevar="state")
literal.states <- interp.states
colnames(literal.states)[3] <- "prior"
epsilon <- 0.001
literal.states$prior <- ifelse(literal.states$state == literal.states$utterance, 1-4*epsilon, epsilon)
literal.states.wide <- reshape(data=literal.states, direction="wide",
v.names="prior", idvar=c("imageID", "utterance"), timevar="state")
kl <- join(interp.states.wide, literal.states.wide, by=c("imageID", "utterance"))
kl$KL <-
kl$prob.terrible * log(kl$prob.terrible / kl$prior.terrible) +
kl$prob.bad * log(kl$prob.bad / kl$prior.bad) +
kl$prob.neutral * log(kl$prob.neutral / kl$prior.neutral) +
kl$prob.good * log(kl$prob.good / kl$prior.good) +
kl$prob.amazing * log(kl$prob.amazing / kl$prior.amazing)
kl <- join(kl, irony.summary, by=c("imageID", "utterance"))
with(kl, cor.test(KL, ironyRating))
summary(lm(data=kl, ironyRating ~ KL))
summary(lm(data=kl, ironyRating ~ consistent))
summary(lm(data=kl, ironyRating ~ KL + consistent))
lm.valence.kl <- lm(data=kl, ironyRating ~ utteranceValence * imageValence + KL)
lm.valence <- lm(data=kl, ironyRating ~ utteranceValence * imageValence)
anova(lm.valence, lm.valence.kl)
ggplot(kl, aes(x=KL, y=ironyRating, color=utterance)) +
geom_point() +
theme_bw() +
facet_wrap(~imageID, ncol=3)
# affect
affect.posterior <- predict(comps, interp)
#### z score and pnorm
affect.posterior.probit <- pnorm(scale(affect.posterior))
affect.pca <- cbind(interp, affect.posterior.probit)
affect.pca.long <-  melt(data=affect.pca, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "imageID", "imageCategory",  "utterance",
"stateRating"),
measure.vars=c("Comp.1", "Comp.2"))
affect.pca.long$value.corrected <- ifelse(affect.pca.long$variable == "Comp.1", affect.pca.long$value,
1 - affect.pca.long$value)
head(affect.pca.long)
affect.pca.summary <- summarySE(affect.pca.long, measurevar="value.corrected",
groupvars=c("imageID", "utterance", "variable"))
ggplot(affect.pca.summary, aes(x=utterance, y=value.corrected, color=variable)) +
geom_point() +
geom_line(aes(group=variable)) +
geom_errorbar(aes(ymin=value.corrected-se, ymax=value.corrected+se), width=0.05) +
facet_wrap(~imageID, ncol=3) +
theme_bw()
affect.pca.summary$imageID.reordered <- factor(affect.pca.summary$imageID, levels=c(3, 2, 1, 6, 5, 4, 8, 7, 9),
labels=c("Weather context 1", "Weather context 2", "Weather context 3",
"Weather context 4", "Weather context 5", "Weather context 6",
"Weather context 7", "Weather context 8", "Weather context 9"))
affect.pca.summary.subset <- subset(affect.pca.summary, (imageID.reodered == "w2" | imageID.reordered=="w6" | imageID.reordered=="w8")
& utterance=="terrible")
affect.pca.summary.subset <- subset(affect.pca.summary, (imageID.reordered == "w2" | imageID.reordered=="w6" | imageID.reordered=="w8")
& utterance=="terrible")
head(affect.pca.summary.subset)
affect.pca.summary$imageID.reordered <- factor(affect.pca.summary$imageID, levels=c(3, 2, 1, 6, 5, 4, 8, 7, 9),
labels=c("w1", "w2", "w3",
"w4", "w5", "w6",
"w7", "w8", "w9"))
# subset for presentation (w2, w6, w8)
affect.pca.summary.subset <- subset(affect.pca.summary, (imageID.reordered == "w2" | imageID.reordered=="w6" | imageID.reordered=="w8")
& utterance=="terrible")
head(affect.pca.summary)
head(affect.pca.summary.subset)
affect.pca.summary.subset$imageID.reordered <- factor(affect.pca.summary.subset$imageID.reordered, levels=c("w2", "w6", "w8"))
affect.pca.summary.subset$imageID.reordered <- factor(affect.pca.summary.subset$imageID.reordered, levels=c("w2", "w6", "w8"))
ggplot(affect.pca.summary.subset, aes(x=variable, y=value.corrected)) +
geom_bar(stat="identity") +
theme_bw() +
facet_grid(.~imageID.reordered)
affect.pca.summary.subset$imageID.reordered <- factor(affect.pca.summary.subset$imageID.reordered, levels=c("w8", "w6", "w2"))
ggplot(affect.pca.summary.subset, aes(x=variable, y=value.corrected)) +
geom_bar(stat="identity") +
theme_bw() +
facet_grid(.~imageID.reordered)
head(priors.pca.probit.summary)
priors.affect.byImage.summary <- summarySE(priors.pca.probit.long, measurevar="value.corrected",
groupvars=c("variable", "imageID"))
head(affect.pca.summary.subset)
head(priors.affect.byImage.summary)
priors.affect.byImage.summary$imageID.reordered <- factor(priors.affect.byImage.summary, levels=c(3, 2, 1, 6, 5, 4, 8, 7, 9),
labels=c("w1", "w2", "w3",
"w4", "w5", "w6",
"w7", "w8", "w9"))
priors.affect.byImage.summary$imageID.reordered <- factor(priors.affect.byImage.summary$imageID, levels=c(3, 2, 1, 6, 5, 4, 8, 7, 9),
labels=c("w1", "w2", "w3",
"w4", "w5", "w6",
"w7", "w8", "w9"))
