name="", guide=FALSE) +
xlab("Year born") +
ylab("Concreteness (z-scored)")
t.test(style.19$concreteness, style.21$concreteness)
with(style.19, cor.test(year, concreteness))
with(style.21, cor.test(year, concreteness))
t.test(style.19.non$concreteness, style.19.imagist$concreteness)
head(style)
lm(data=style, concreteness ~ year)
summary(lm(data=style, concreteness ~ year))
summary(lm(data=style, concreteness ~ year + imagist))
summary(lm(data=style.prof, concreteness ~ year + imagist))
sqrt(0.15)
style.prof$group <- ifelse(style.prof$time == "modern" | style.prof$imagist == "yes", "new", "old")
summary(lm(data=style.prof, concreteness ~ year + group))
sqrt(0.1827)
lm.year <- lm(data=style.prof, concreteness ~ year)
lm.year.group <- lm(data=style.prof, concreteness ~ year + group)
lm.group <- lm(data=style.prof, concreteness ~ group)
anova(lm.year, lm.year.group)
anova(lm.group, lm.year.group)
style.prof$group <- factor(style.prof$group)
lm.year <- lm(data=style.prof, concreteness ~ year)
lm.year.group <- lm(data=style.prof, concreteness ~ year + group)
lm.group <- lm(data=style.prof, concreteness ~ group)
anova(lm.year, lm.year.group)
ggplot(style.prof, aes(x=year, y=concreteness, color=color, shape=imagist)) +
geom_point(size=3) +
theme_bw() +
scale_shape_manual(values=c(1, 17), labels=c("Other", "Imagist"), name="") +
scale_color_manual(values=c("#023858", "#993333"),
name="", guide=FALSE) +
xlab("Year born") +
ylab("Concreteness (z-scored)")
ggplot(style.prof, aes(x=year, y=concreteness, color=color, shape=imagist)) +
geom_point(size=3) +
theme_bw() +
scale_shape_manual(values=c(1, 17), labels=c("Other", "Imagist"), name="") +
scale_color_manual(values=c("#023858", "#993333"),
name="", labels=c("Non-imagist 19th century poets", "Imagists and contemporary poets")) +
xlab("Year born") +
ylab("Concreteness (z-scored)")
summary(lm.year.group <- lm(data=style.prof, concreteness ~ year + group))
library(ggplot2)
library(reshape2)
library(plyr)
library(ggbiplot)
source("~/Dropbox/Work/Grad_school/Research/Utilities/summarySE.R")
###########################
# Priors
###########################
priors <- read.csv("../data/priors/long.csv")
numSubjects <- length(unique(priors$workerID))
priors$stateRating <- factor(priors$stateRating, labels=c("terrible", "bad", "neutral", "good", "amazing"))
priors.states.raw <- with(priors, table(imageID, stateRating)) + 1 #laplace smoothing
priors.states <- as.data.frame(prop.table(priors.states.raw, margin = 1))
colnames(priors.states)[3] <- "prior"
# plot distribution over states
ggplot(priors.states, aes(x=stateRating, y=prior)) +
geom_bar(stat="identity", fill="gray", color="black") +
ylab("probability") +
facet_wrap(~imageID, ncol=3) +
theme_bw()
priors.states$imageID.reordered <- factor(priors.states$imageID, levels=c(3, 2, 1, 6, 5, 4, 8, 7, 9),
labels=c("w1", "w2", "w3", "w4", "w5", "w6", "w7", "w8", "w9"))
ggplot(priors.states, aes(x=stateRating, y=prior)) +
geom_point(size=3, color="gray") +
geom_line(aes(group=imageID), color="gray") +
ylab("Proportion of participants") +
xlab("Weather state rating") +
facet_wrap(~imageID.reordered, ncol=3) +
theme_bw()
ggplot(priors.states, aes(x=stateRating, y=prior, color=imageID)) +
geom_point(size=3) +
geom_line(aes(group=imageID), color="gray") +
ylab("Proportion of subjects") +
xlab("State") +
#facet_wrap(~imageID, ncol=3) +
theme_bw()
# affect ratings
comps <- princomp(data=priors, ~ sad + disgusted + angry + neutral + content + happy + excited, cor=FALSE, scores=TRUE)
summary(comps)
biplot(comps)
ggbiplot(comps, pc.biplot= TRUE, obs.scale = 1, var.scale = 1,
circle = FALSE, labels.size=5, alpha=0.2, varname.size=3.5, varname.adjust=1) +
theme_bw() +
scale_y_reverse() +
xlab("PC1: Valence (69.1% var.)") +
ylab("PC2: Arousal (13.9% var.)") +
theme(axis.text.x = element_blank(), axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor=element_blank(), panel.grid.major=element_blank())
loadings(comps)
scores <- summary(comps)$scores
scores.z <- scale(scores)
scores.probit <- pnorm(scores.z)
priors.pca.probit <- cbind(priors, scores.probit)
priors.pca.probit.long <-  melt(data=priors.pca.probit, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "imageID", "imageCategory",  "stateRating"),
measure.vars=c("Comp.1", "Comp.2"))
priors.pca.probit.long$value.corrected <- ifelse(priors.pca.probit.long$variable=="Comp.2",
1- priors.pca.probit.long$value,
priors.pca.probit.long$value)
priors.pca.probit.summary <- summarySE(priors.pca.probit.long, measurevar="value.corrected",
groupvars=c("variable", "stateRating"))
ggplot(priors.pca.probit.summary, aes(x=stateRating, y=value.corrected, color=variable)) +
geom_point() +
geom_line(aes(group=variable)) +
#geom_point(size=2) +
#geom_line(aes(group=variable)) +
geom_errorbar(aes(ymin=value.corrected-ci, ymax=value.corrected+ci), width=0.05) +
#facet_wrap(~ stateRating, ncol=3) +
theme_bw() +
xlab("Weather state rating") +
ylab("Probability") +
scale_color_discrete(name="Affect dimension", labels=c("Positive valence", "High arousal"))
priors.pca.probit.summary <- summarySE(priors.pca.probit.long, measurevar="value.corrected",
groupvars=c("variable", "stateRating"))
ggplot(priors.pca.probit.summary, aes(x=stateRating, y=value.corrected, color=variable)) +
geom_point() +
geom_line(aes(group=variable)) +
#geom_point(size=2) +
#geom_line(aes(group=variable)) +
geom_errorbar(aes(ymin=value.corrected-ci, ymax=value.corrected+ci), width=0.05) +
#facet_wrap(~ stateRating, ncol=3) +
theme_bw() +
xlab("Weather state rating") +
ylab("Probability") +
scale_color_discrete(name="Affect dimension", labels=c("Positive valence", "High arousal"))
####################################
# Interpretation data
####################################
interp <- read.csv("../data/interpretation/long_askIrony.csv")
numSubjects <- length(unique(interp$workerID))
interp$stateRating <- factor(interp$stateRating, labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$imageCategory <- factor(interp$imageCategory, levels=c("terrible", "bad", "ok", "good", "amazing"),
labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$utterance <- factor(interp$utterance, levels=c("terrible", "bad", "ok", "good", "amazing"),
labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$imageID.utterance <- paste(interp$imageID, interp$utterance, sep=",")
# irony
irony.summary <- summarySE(interp, measurevar="ironyRating", groupvars=c("imageID", "imageCategory", "utterance"))
irony.summary$imageValence <- ifelse(irony.summary$imageID == 4, "neutral",
ifelse(irony.summary$imageID == 7 | irony.summary$imageID == 8 | irony.summary$imageID == 9,
"neg", "pos"))
irony.summary$utteranceValence <- ifelse(irony.summary$utterance == "neutral", "neutral",
ifelse(irony.summary$utterance == "amazing" | irony.summary$utterance == "good", "pos",
"neg"))
irony.summary$consistent <- ifelse(irony.summary$imageValence == irony.summary$utteranceValence, 1, 0)
summary(lm(data=irony.summary, ironyRating ~ consistent))
ggplot(irony.summary, aes(x=utterance, y=ironyRating)) +
geom_bar(stat="identity", color="black", fill="grey", position=position_dodge()) +
geom_errorbar(aes(ymin=ironyRating-se, ymax=ironyRating+se), position=position_dodge(0.9), width=0.2) +
facet_wrap(~imageID, ncol=3) +
theme_bw() +
ylab("Irony rating")
# state
interp.states.raw <- with(interp, table(imageID.utterance, stateRating)) + 1
interp.states <- as.data.frame(prop.table(interp.states.raw, margin = 1))
interp.states <- cbind(interp.states,ldply(strsplit(as.character(interp.states$imageID.utterance),",")))
colnames(interp.states)[2] <- "state"
colnames(interp.states)[4] <- "imageID"
colnames(interp.states)[5] <- "utterance"
interp.states$utterance <- factor(interp.states$utterance, levels=c("terrible", "bad", "neutral", "good", "amazing"))
interp.states$state <- factor(interp.states$state, levels=c("terrible", "bad", "neutral", "good", "amazing"))
#quartz()
ggplot(interp.states, aes(x=state, y=Freq)) +
geom_bar(stat="identity", fill="gray", color="black") +
ylab("probability") +
facet_grid(imageID~utterance) +
theme_bw()
# Compare irony and state distribution
colnames(interp.states)[3] <- "prob"
interp.states.wide <- reshape(data=interp.states, direction="wide",
v.names="prob", idvar=c("imageID", "utterance"), timevar="state")
literal.states <- interp.states
colnames(literal.states)[3] <- "prior"
epsilon <- 0.001
literal.states$prior <- ifelse(literal.states$state == literal.states$utterance, 1-4*epsilon, epsilon)
literal.states.wide <- reshape(data=literal.states, direction="wide",
v.names="prior", idvar=c("imageID", "utterance"), timevar="state")
kl <- join(interp.states.wide, literal.states.wide, by=c("imageID", "utterance"))
kl$KL <-
kl$prob.terrible * log(kl$prob.terrible / kl$prior.terrible) +
kl$prob.bad * log(kl$prob.bad / kl$prior.bad) +
kl$prob.neutral * log(kl$prob.neutral / kl$prior.neutral) +
kl$prob.good * log(kl$prob.good / kl$prior.good) +
kl$prob.amazing * log(kl$prob.amazing / kl$prior.amazing)
kl <- join(kl, irony.summary, by=c("imageID", "utterance"))
with(kl, cor.test(KL, ironyRating))
summary(lm(data=kl, ironyRating ~ KL))
summary(lm(data=kl, ironyRating ~ consistent))
summary(lm(data=kl, ironyRating ~ KL + consistent))
lm.valence.kl <- lm(data=kl, ironyRating ~ utteranceValence * imageValence + KL)
lm.valence <- lm(data=kl, ironyRating ~ utteranceValence * imageValence)
anova(lm.valence, lm.valence.kl)
ggplot(kl, aes(x=KL, y=ironyRating, color=utterance)) +
geom_point() +
theme_bw() +
facet_wrap(~imageID, ncol=3)
setwd("~/Dropbox/Work/Grad_school/Research/Irony/analyses")
library(ggplot2)
library(reshape2)
library(plyr)
library(ggbiplot)
source("~/Dropbox/Work/Grad_school/Research/Utilities/summarySE.R")
###########################
# Priors
###########################
priors <- read.csv("../data/priors/long.csv")
numSubjects <- length(unique(priors$workerID))
priors$stateRating <- factor(priors$stateRating, labels=c("terrible", "bad", "neutral", "good", "amazing"))
priors.states.raw <- with(priors, table(imageID, stateRating)) + 1 #laplace smoothing
priors.states <- as.data.frame(prop.table(priors.states.raw, margin = 1))
colnames(priors.states)[3] <- "prior"
# plot distribution over states
ggplot(priors.states, aes(x=stateRating, y=prior)) +
geom_bar(stat="identity", fill="gray", color="black") +
ylab("probability") +
facet_wrap(~imageID, ncol=3) +
theme_bw()
priors.states$imageID.reordered <- factor(priors.states$imageID, levels=c(3, 2, 1, 6, 5, 4, 8, 7, 9),
labels=c("w1", "w2", "w3", "w4", "w5", "w6", "w7", "w8", "w9"))
ggplot(priors.states, aes(x=stateRating, y=prior)) +
geom_point(size=3, color="gray") +
geom_line(aes(group=imageID), color="gray") +
ylab("Proportion of participants") +
xlab("Weather state rating") +
facet_wrap(~imageID.reordered, ncol=3) +
theme_bw()
ggplot(priors.states, aes(x=stateRating, y=prior, color=imageID)) +
geom_point(size=3) +
geom_line(aes(group=imageID), color="gray") +
ylab("Proportion of subjects") +
xlab("State") +
#facet_wrap(~imageID, ncol=3) +
theme_bw()
# affect ratings
comps <- princomp(data=priors, ~ sad + disgusted + angry + neutral + content + happy + excited, cor=FALSE, scores=TRUE)
summary(comps)
biplot(comps)
ggbiplot(comps, pc.biplot= TRUE, obs.scale = 1, var.scale = 1,
circle = FALSE, labels.size=5, alpha=0.2, varname.size=3.5, varname.adjust=1) +
theme_bw() +
scale_y_reverse() +
xlab("PC1: Valence (69.1% var.)") +
ylab("PC2: Arousal (13.9% var.)") +
theme(axis.text.x = element_blank(), axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.minor=element_blank(), panel.grid.major=element_blank())
loadings(comps)
scores <- summary(comps)$scores
scores.z <- scale(scores)
scores.probit <- pnorm(scores.z)
priors.pca.probit <- cbind(priors, scores.probit)
priors.pca.probit.long <-  melt(data=priors.pca.probit, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "imageID", "imageCategory",  "stateRating"),
measure.vars=c("Comp.1", "Comp.2"))
priors.pca.probit.long$value.corrected <- ifelse(priors.pca.probit.long$variable=="Comp.2",
1- priors.pca.probit.long$value,
priors.pca.probit.long$value)
priors.pca.probit.summary <- summarySE(priors.pca.probit.long, measurevar="value.corrected",
groupvars=c("variable", "stateRating"))
ggplot(priors.pca.probit.summary, aes(x=stateRating, y=value.corrected, color=variable)) +
geom_point() +
geom_line(aes(group=variable)) +
#geom_point(size=2) +
#geom_line(aes(group=variable)) +
geom_errorbar(aes(ymin=value.corrected-ci, ymax=value.corrected+ci), width=0.05) +
#facet_wrap(~ stateRating, ncol=3) +
theme_bw() +
xlab("Weather state rating") +
ylab("Probability") +
scale_color_discrete(name="Affect dimension", labels=c("Positive valence", "High arousal"))
priors.pca.probit.summary <- summarySE(priors.pca.probit.long, measurevar="value.corrected",
groupvars=c("variable", "stateRating"))
ggplot(priors.pca.probit.summary, aes(x=stateRating, y=value.corrected, color=variable)) +
geom_point() +
geom_line(aes(group=variable)) +
#geom_point(size=2) +
#geom_line(aes(group=variable)) +
geom_errorbar(aes(ymin=value.corrected-ci, ymax=value.corrected+ci), width=0.05) +
#facet_wrap(~ stateRating, ncol=3) +
theme_bw() +
xlab("Weather state rating") +
ylab("Probability") +
scale_color_discrete(name="Affect dimension", labels=c("Positive valence", "High arousal"))
####################################
# Interpretation data
####################################
interp <- read.csv("../data/interpretation/long_askIrony.csv")
numSubjects <- length(unique(interp$workerID))
interp$stateRating <- factor(interp$stateRating, labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$imageCategory <- factor(interp$imageCategory, levels=c("terrible", "bad", "ok", "good", "amazing"),
labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$utterance <- factor(interp$utterance, levels=c("terrible", "bad", "ok", "good", "amazing"),
labels=c("terrible", "bad", "neutral", "good", "amazing"))
interp$imageID.utterance <- paste(interp$imageID, interp$utterance, sep=",")
# irony
irony.summary <- summarySE(interp, measurevar="ironyRating", groupvars=c("imageID", "imageCategory", "utterance"))
irony.summary$imageValence <- ifelse(irony.summary$imageID == 4, "neutral",
ifelse(irony.summary$imageID == 7 | irony.summary$imageID == 8 | irony.summary$imageID == 9,
"neg", "pos"))
irony.summary$utteranceValence <- ifelse(irony.summary$utterance == "neutral", "neutral",
ifelse(irony.summary$utterance == "amazing" | irony.summary$utterance == "good", "pos",
"neg"))
irony.summary$consistent <- ifelse(irony.summary$imageValence == irony.summary$utteranceValence, 1, 0)
summary(lm(data=irony.summary, ironyRating ~ consistent))
ggplot(irony.summary, aes(x=utterance, y=ironyRating)) +
geom_bar(stat="identity", color="black", fill="grey", position=position_dodge()) +
geom_errorbar(aes(ymin=ironyRating-se, ymax=ironyRating+se), position=position_dodge(0.9), width=0.2) +
facet_wrap(~imageID, ncol=3) +
theme_bw() +
ylab("Irony rating")
# state
interp.states.raw <- with(interp, table(imageID.utterance, stateRating)) + 1
interp.states <- as.data.frame(prop.table(interp.states.raw, margin = 1))
interp.states <- cbind(interp.states,ldply(strsplit(as.character(interp.states$imageID.utterance),",")))
colnames(interp.states)[2] <- "state"
colnames(interp.states)[4] <- "imageID"
colnames(interp.states)[5] <- "utterance"
interp.states$utterance <- factor(interp.states$utterance, levels=c("terrible", "bad", "neutral", "good", "amazing"))
interp.states$state <- factor(interp.states$state, levels=c("terrible", "bad", "neutral", "good", "amazing"))
#quartz()
ggplot(interp.states, aes(x=state, y=Freq)) +
geom_bar(stat="identity", fill="gray", color="black") +
ylab("probability") +
facet_grid(imageID~utterance) +
theme_bw()
# Compare irony and state distribution
colnames(interp.states)[3] <- "prob"
interp.states.wide <- reshape(data=interp.states, direction="wide",
v.names="prob", idvar=c("imageID", "utterance"), timevar="state")
literal.states <- interp.states
colnames(literal.states)[3] <- "prior"
epsilon <- 0.001
literal.states$prior <- ifelse(literal.states$state == literal.states$utterance, 1-4*epsilon, epsilon)
literal.states.wide <- reshape(data=literal.states, direction="wide",
v.names="prior", idvar=c("imageID", "utterance"), timevar="state")
kl <- join(interp.states.wide, literal.states.wide, by=c("imageID", "utterance"))
kl$KL <-
kl$prob.terrible * log(kl$prob.terrible / kl$prior.terrible) +
kl$prob.bad * log(kl$prob.bad / kl$prior.bad) +
kl$prob.neutral * log(kl$prob.neutral / kl$prior.neutral) +
kl$prob.good * log(kl$prob.good / kl$prior.good) +
kl$prob.amazing * log(kl$prob.amazing / kl$prior.amazing)
kl <- join(kl, irony.summary, by=c("imageID", "utterance"))
with(kl, cor.test(KL, ironyRating))
summary(lm(data=kl, ironyRating ~ KL))
summary(lm(data=kl, ironyRating ~ consistent))
summary(lm(data=kl, ironyRating ~ KL + consistent))
lm.valence.kl <- lm(data=kl, ironyRating ~ utteranceValence * imageValence + KL)
lm.valence <- lm(data=kl, ironyRating ~ utteranceValence * imageValence)
anova(lm.valence, lm.valence.kl)
ggplot(kl, aes(x=KL, y=ironyRating, color=utterance)) +
geom_point() +
theme_bw() +
facet_wrap(~imageID, ncol=3)
affect.posterior <- predict(comps, interp)
#### z score and pnorm
affect.posterior.probit <- pnorm(scale(affect.posterior))
affect.pca <- cbind(interp, affect.posterior.probit)
affect.pca.long <-  melt(data=affect.pca, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "imageID", "imageCategory",  "utterance",
"stateRating"),
measure.vars=c("Comp.1", "Comp.2"))
affect.pca.long$value.corrected <- ifelse(affect.pca.long$variable == "Comp.1", affect.pca.long$value,
1 - affect.pca.long$value)
affect.pca.summary <- summarySE(affect.pca.long, measurevar="value.corrected",
groupvars=c("imageID", "utterance", "variable"))
ggplot(affect.pca.summary, aes(x=utterance, y=value.corrected, color=variable)) +
geom_point() +
geom_line(aes(group=variable)) +
geom_errorbar(aes(ymin=value.corrected-se, ymax=value.corrected+se), width=0.05) +
facet_wrap(~imageID, ncol=3) +
theme_bw()
toy.1 <- read.csv("../model/modeltoy-1affect.csv")
head(toy.1)
View(toy.1)
toy.1 <- read.csv("../model/modeltoy-1affect.csv")
head(toy.1)
?repeat
?repeat
?rep
rep(1, each=5)
toy.priors <- data.frame(imageID=rep(c(1, 2), each=5), utterance=rep("prior", each=10),
state=rep(c("terrible", "bad", "neutral", "good", "amazing"), each=2),
probability=c(0.1, 0.5, 0.2, 0.1, 0,1, 0.1, 0.1, 0.1, 0.2, 0.5))
=rep(c(1, 2), each=5)
rep(c(1, 2), each=5)
rep("prior", each=10)
rep(c("terrible", "bad", "neutral", "good", "amazing"), each=2)
toy.priors <- data.frame(imageID=rep(c(1, 2), each=5), utterance=rep("prior", each=10),
state=c("terrible", "bad", "neutral", "good", "amazing",
"terrible", "bad", "neutral", "good", "amazing"),
probability=c(0.1, 0.5, 0.2, 0.1, 0,1, 0.1, 0.1, 0.1, 0.2, 0.5))
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=rep("prior", each=10),
state=c("terrible", "bad", "neutral", "good", "amazing",
"terrible", "bad", "neutral", "good", "amazing"),
probability=c(0.1, 0.5, 0.2, 0.1, 0,1, 0.1, 0.1, 0.1, 0.2, 0.5))
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=rep(0, each=10),
state=c("terrible", "bad", "neutral", "good", "amazing",
"terrible", "bad", "neutral", "good", "amazing"),
probability=c(0.1, 0.5, 0.2, 0.1, 0,1, 0.1, 0.1, 0.1, 0.2, 0.5))
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=rep("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"),
state=c("terrible", "bad", "neutral", "good", "amazing",
"terrible", "bad", "neutral", "good", "amazing"),
probability=c(0.1, 0.5, 0.2, 0.1, 0,1, 0.1, 0.1, 0.1, 0.2, 0.5))
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=c("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"),
state=c("terrible", "bad", "neutral", "good", "amazing",
"terrible", "bad", "neutral", "good", "amazing"),
probability=c(0.1, 0.5, 0.2, 0.1, 0,1, 0.1, 0.1, 0.1, 0.2, 0.5))
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=c("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"))
,
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=c("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"))
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=c("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"),
state=c("terrible", "bad", "neutral", "good", "amazing",
"terrible", "bad", "neutral", "good", "amazing"),
probability=c(0.1, 0.5, 0.2, 0.1, 0,1, 0.1, 0.1, 0.1, 0.2, 0.5))
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=c("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"),
#                          state=c("terrible", "bad", "neutral", "good", "amazing",
#                                  "terrible", "bad", "neutral", "good", "amazing"),
probability=c(0.1, 0.5, 0.2, 0.1, 0,1, 0.1, 0.1, 0.1, 0.2, 0.5))
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=c("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"))
head(toy.priors)
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=c("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"),
probability=c(0.1, 0.5, 0.2, 0.1, 0,1, 0.1, 0.1, 0.1, 0.2, 0.5))
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=c("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"),
probability=c(0.1, 0.5, 0.2, 0.1, 0,1, 0.1, 0.1, 0.1, 0.2))
View(toy.priors)
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=c("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"),
state=c("terrible", "bad", "neutral", "good", "amazing",
"terrible", "bad", "neutral", "good", "amazing"),
probability=c(0.1, 0.5, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2))
toy.priors <- data.frame(imageID=c(1,1,1,1,1,2,2,2,2,2), utterance=c("prior", "prior", "prior", "prior", "prior",
"prior", "prior", "prior", "prior", "prior"),
state=c("terrible", "bad", "neutral", "good", "amazing",
"terrible", "bad", "neutral", "good", "amazing"),
probability=c(0.1, 0.5, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.5))
toy.1 <- read.csv("../model/modeltoy-1affect.csv")
head(toy.1)
head(toy.priors)
toy.1.state <- aggregate(data=toy.priors, probability ~ imageID + utterance + state)
toy.1.state <- aggregate(data=toy.priors, probability ~ imageID + utterance + state, FUN=sum)
head(toy.1.state)
head(toy.priors)
toy.1.state <- aggregate(data=toy.1, probability ~ imageID + utterance + state, FUN=sum)
toy.1.state <- aggregate(data=toy.1, probability ~ imageID + utterance + state, FUN=sum)
head(toy.1.state)
head(toy.priors)
toy.1.state.priors <- rbind(toy.1, toy.1.state)
toy.1.state.priors <- rbind(toy.priors, toy.1.state)
ggplot(toy.1.state.priors, aes(x=state, y=probability, color=utterance)) +
geom_point() +
geom_line(aes(group=utterance)) +
facet_grid(.~imageID) +
theme_bw()
head(toy.1.state.priors)
ggplot(toy.1.state.priors, aes(x=state, y=probability, color=utterance)) +
geom_point() +
geom_line(aes(group=utterance))
ggplot(toy.1.state.priors, aes(x=state, y=probability, color=utterance)) +
geom_point()
ggplot(comp.prior.arousal, aes(x=utterance, y=value)) +
geom_bar(stat="identity", color="black", fill="grey") +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=0.2) +
theme_bw() +
facet_wrap(~imageID, ncol=3)
View(toy.1.state.priors)
ggplot(toy.1.state.priors, aes(x=state, y=probability)) +
geom_point()
toy.1.state.priors$state <- factor(toy.1.state.priors$state)
ggplot(toy.1.state.priors, aes(x=state, y=probability)) +
geom_point() +
geom_line(aes(group=utterance)) +
facet_grid(.~imageID) +
theme_bw()
ggplot(priors.states, aes(x=stateRating, y=prior)) +
geom_bar(stat="identity", fill="gray", color="black") +
ylab("probability") +
facet_wrap(~imageID, ncol=3) +
theme_bw()
library(ggplot2)
library(reshape2)
library(plyr)
library(ggbiplot)
source("~/Dropbox/Work/Grad_school/Research/Utilities/summarySE.R")
###########################
# Priors
###########################
priors <- read.csv("../data/priors/long.csv")
numSubjects <- length(unique(priors$workerID))
priors$stateRating <- factor(priors$stateRating, labels=c("terrible", "bad", "neutral", "good", "amazing"))
priors.states.raw <- with(priors, table(imageID, stateRating)) + 1 #laplace smoothing
priors.states <- as.data.frame(prop.table(priors.states.raw, margin = 1))
colnames(priors.states)[3] <- "prior"
# plot distribution over states
ggplot(priors.states, aes(x=stateRating, y=prior)) +
geom_bar(stat="identity", fill="gray", color="black") +
ylab("probability") +
facet_wrap(~imageID, ncol=3) +
theme_bw()
